services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper1
    container_name: zookeeper1
    profiles: 
      - zookeeper
      - migration
    restart: always
    ports:
      - "21811:21811"
      - "31801:31801"
      - "21801:21801"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_JMX_HOSTNAME: zookeeper1
      ZOOKEEPER_CLIENT_PORT: 21811
      ZOOKEEPER_JMX_PORT: 21801
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
 
  zookeeper2:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper2
    container_name: zookeeper2
    profiles: 
      - zookeeper
      - migration
    restart: always
    ports:
      - "21812:21812"
      - "31802:31802"
      - "21802:21802"
    volumes:
      - data-zookeeper-log-2:/var/lib/zookeeper/log
      - data-zookeeper-data-2:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_JMX_HOSTNAME: zookeeper2
      ZOOKEEPER_CLIENT_PORT: 21812
      ZOOKEEPER_JMX_PORT: 21802
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888

  zookeeper3:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper3
    container_name: zookeeper3
    profiles: 
      - zookeeper
      - migration
    restart: always
    ports:
      - "21813:21813"
      - "31803:31803"
      - "21803:21803"
    volumes:
      - data-zookeeper-log-3:/var/lib/zookeeper/log
      - data-zookeeper-data-3:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_JMX_HOSTNAME: zookeeper3
      ZOOKEEPER_CLIENT_PORT: 21813
      ZOOKEEPER_JMX_PORT: 21803
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888

  # KRaft Controllers
  controller1:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller1
    container_name: controller1
    profiles: 
      - migration
      - kraft
    volumes:
      - data-controller1:/var/lib/kafka/data
      # A little hack which allows us initializing a dynamic quorum
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    healthcheck:
      test: [ "CMD", "nc", "-z", "controller1", "9093" ]
    environment:
      # Common
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://controller1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_NODE_ID: 101
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_QUORUM_AUTO_JOIN_ENABLE: true
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"
      # Alternatively, use just the following line for a static quorum
      #KAFKA_CONTROLLER_QUORUM_VOTERS: 101@controller1:9093,102@controller2:9093,103@controller3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      KAFKA_KRAFT_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      CONTROLLER_1_UUID: ${CONTROLLER_1_UUID}
      CONTROLLER_2_UUID: ${CONTROLLER_2_UUID}
      CONTROLLER_3_UUID: ${CONTROLLER_3_UUID}


  controller2:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller2
    container_name: controller2
    volumes:
      - data-controller2:/var/lib/kafka/data
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    profiles: 
      - migration
      - kraft
    healthcheck:
      test: [ "CMD", "nc", "-z", "controller2", "9093" ]
#    depends_on:
#      controller1:
#        condition: service_healthy
    environment:
      # Common
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://controller2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_NODE_ID: 102
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_QUORUM_AUTO_JOIN_ENABLE: true
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"
      # Alternatively, use just the following line for a static quorum
      #KAFKA_CONTROLLER_QUORUM_VOTERS: 101@controller1:9093,102@controller2:9093,103@controller3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      KAFKA_KRAFT_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      CONTROLLER_1_UUID: ${CONTROLLER_1_UUID}
      CONTROLLER_2_UUID: ${CONTROLLER_2_UUID}
      CONTROLLER_3_UUID: ${CONTROLLER_3_UUID}


  controller3:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller3
    container_name: controller3
    volumes:
      - data-controller3:/var/lib/kafka/data
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    profiles: 
      - migration
      - kraft
    healthcheck:
      test: [ "CMD", "nc", "-z", "controller3", "9093" ]
#    depends_on:
#      controller1:
#        condition: service_healthy
    environment:
      # Common
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://controller3:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_NODE_ID: 103
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_QUORUM_AUTO_JOIN_ENABLE: true
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"
      # Alternatively, use just the following line for a static quorum
      #KAFKA_CONTROLLER_QUORUM_VOTERS: 101@controller1:9093,102@controller2:9093,103@controller3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      KAFKA_KRAFT_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      CONTROLLER_1_UUID: ${CONTROLLER_1_UUID}
      CONTROLLER_2_UUID: ${CONTROLLER_2_UUID}
      CONTROLLER_3_UUID: ${CONTROLLER_3_UUID}

  controller4:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller4
    container_name: controller4
    volumes:
      - data-controller4:/var/lib/kafka/data
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    profiles: 
      - migration
      - kraft
    healthcheck:
      test: [ "CMD", "nc", "-z", "controller4", "9093" ]
    depends_on:
      controller1:
        condition: service_healthy
    environment:
      # Common
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://controller4:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_NODE_ID: 104
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_QUORUM_AUTO_JOIN_ENABLE: true
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"
      # Alternatively, use just the following line for a static quorum
      #KAFKA_CONTROLLER_QUORUM_VOTERS: 101@controller1:9093,102@controller2:9093,103@controller3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      KAFKA_KRAFT_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      CONTROLLER_1_UUID: ${CONTROLLER_1_UUID}
      CONTROLLER_2_UUID: ${CONTROLLER_2_UUID}
      CONTROLLER_3_UUID: ${CONTROLLER_3_UUID}

  broker1:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker1
    container_name: broker1
    ports:
      - "9092:29092"
    volumes:
      - data-broker1:/var/lib/kafka/data
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    healthcheck:
      test: [ "CMD", "nc", "-z", "broker1", "9092" ]
    environment:
      KAFKA_LISTENERS: 'PLAINTEXT://broker1:9092,PLAINTEXT_HOST://0.0.0.0:19092'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_LINK_COORDINATOR_ENABLE: true
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: false
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: false
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICA: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 12
      KAFKA_LOG_SEGMENT_BYTES: 1048576 #1Mb
      KAFKA_LOG_RETENTION_BYTES: 134217728 #128Mb
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker1:9092"
      ############ Zookeeper to KRaft Migration Phase 1 ##############
      # Use these lines only during Phase 1 (Zookeeper mode) and Phase 2 (Migration): DO NOT USE these lines in Phase 3!
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:21811,zookeeper2:21812,zookeeper3:21813
      KAFKA_BROKER_ID: 1
      ############ Zookeeper to KRaft Migration Phase 2 ##############
      # Use these lines on in Phase 2 (Migration). DO NOT USE these lines in Phase 1 or Phase 3!
      #KAFKA_ZOOKEEPER_METADATA_MIGRATION_ENABLE: true
      # Use these lines on in Phase 2 (Migration towards a dynamic quorum) and Phase 3: Enable for migration and keep lines in final configuration
      #KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      #KAFKA_PROCESS_ROLES: broker
      ############ Zookeeper to KRaft Migration Phase 3 ##############
      # Phase 3 (Migration finished): Enable these lines in the final configuration
      # Comment "KAFKA_BROKER_ID" (above), uncomment "KAFKA_NODE_ID" (below)
      #KAFKA_NODE_ID: 1
      #CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      ############ Zookeeper to KRaft Migration END ##############
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"

  broker2:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker2
    container_name: broker2
    ports:
      - "19093:29093"
    volumes:
      - data-broker2:/var/lib/kafka/data
      - ./kraft/controller/ensure:/etc/confluent/docker/ensure
    healthcheck:
      test: [ "CMD", "nc", "-z", "broker2", "9092" ]
    environment:
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:9092,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: true
      CONFLUENT_LINK_COORDINATOR_ENABLE: true
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE: true
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: false
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: false
      KAFKA_CONFLUENT_BALANCER_ENABLE: false
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICA: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 12
      KAFKA_LOG_SEGMENT_BYTES: 1048576 #1Mb
      KAFKA_LOG_RETENTION_BYTES: 134217728 #128Mb
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker1:9092"
      ############ Zookeeper to KRaft Migration Phase 1 ##############
      # Use these lines only during Phase 1 (Zookeeper mode) and Phase 2 (Migration): DO NOT USE these lines in Phase 3!
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:21811,zookeeper2:21812,zookeeper3:21813
      KAFKA_BROKER_ID: 2
      ############ Zookeeper to KRaft Migration Phase 2 ##############
      # Use these lines on in Phase 2 (Migration). DO NOT USE these lines in Phase 1 or Phase 3!
      #KAFKA_ZOOKEEPER_METADATA_MIGRATION_ENABLE: true
      # Use these lines on in Phase 2 (Migration towards a dynamic quorum) and Phase 3: Enable for migration and keep lines in final configuration
      #KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      #KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      #KAFKA_PROCESS_ROLES: broker
      ############ Zookeeper to KRaft Migration Phase 3 ##############
      # Phase 3 (Migration finished): Enable these lines in the final configuration
      # Comment "KAFKA_BROKER_ID" (above), uncomment "KAFKA_NODE_ID" (below)
      #KAFKA_NODE_ID: 2
      #CLUSTER_ID: ${KRAFT_CLUSTER_ID}
      # Use these settings for dynamic quorum
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: controller1:9093,controller2:9093,controller3:9093
      ############ Zookeeper to KRaft Migration END ##############
      # The following variable is NOT an officially used variable in Kafka or the used docker images
      # We use it here in this demo just to format the Kraft controllers properly for dynamic quorum support
      # Please have a look at the "kraft/controller/ensure" file which will override the original file in the container image
      INITIAL_CONTROLLERS: "101@controller1:9093:${CONTROLLER_1_UUID},102@controller2:9093:${CONTROLLER_2_UUID},103@controller3:9093:${CONTROLLER_3_UUID}"

  schema-registry:
    image: confluentinc/cp-schema-registry:${CP_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy
    ports:
      - '8081:8081'
    healthcheck:
      test: [ "CMD", "nc", "-z", "schema-registry", "8081" ]
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:9092,broker2:9092'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      # TODO
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper1:21811,zookeeper2:21812,zookeeper3:21813

  control-center:
    image: confluentinc/cp-enterprise-control-center:${CP_VERSION}
    hostname: control-center
    container_name: control-center
    profiles:
      - controlcenter
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy
      schema-registry: 
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:9092,broker2:9092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

volumes:
  data-zookeeper-log-1:
    driver: local
  data-zookeeper-data-1:
    driver: local
  data-zookeeper-log-2:
    driver: local
  data-zookeeper-data-2:
    driver: local
  data-zookeeper-log-3:
    driver: local
  data-zookeeper-data-3:
    driver: local
  data-broker1:
    driver: local
  data-broker2:
    driver: local
  data-controller1:
    driver: local
  data-controller2:
    driver: local
  data-controller3:
    driver: local
  data-controller4:
    driver: local
